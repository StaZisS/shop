[versions]
spring-boot = "3.2.2"
testcontainer = "1.19.1"
spring-security = "6.2.1"
jjwt = "0.12.3"
grpc = "1.58.0"

[plugins]
liquibase-plugin = { id = "org.liquibase.gradle", version = "2.2.0" }
jooq-plugin = { id = "nu.studer.jooq", version = "8.2" }
protobuf-plugin = { id = "com.google.protobuf", version = "0.9.4" }

[libraries]
#Spring lib
spring-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }

#security
spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "spring-security" }
spring-security-web = { module = "org.springframework.security:spring-security-web", version.ref = "spring-security" }
spring-security-config = { module = "org.springframework.security:spring-security-config", version.ref = "spring-security" }

#Test lib
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainer" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainer" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainer" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
testcontainers-redis = { module = "com.redis.testcontainers:testcontainers-redis", version = "1.6.4"}

#Jooq lib
jooq-start = { module = "org.springframework.boot:spring-boot-starter-jooq", version.ref = "spring-boot" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version = "3.18.6" }

#Database driver
postgresql-driver = { module = "org.postgresql:postgresql", version = "42.6.0" }
spring-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }

#Liquebase lib
liquibase-core = { module = "org.liquibase:liquibase-core", version = "" }

#Tomcat lib
tomcat-annotations-api = { module = "org.apache.tomcat:annotations-api", version = "6.0.53" }

#gRPC lib
spring-grpc = { module = "io.github.lognet:grpc-spring-boot-starter", version = "5.1.0" }
grpc = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-server = { module = "net.devh:grpc-server-spring-boot-starter", version = "2.15.0.RELEASE" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version = "3.23.0" }

#Jwt libs
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jakarta-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version = "4.0.1" }