import nu.studer.gradle.jooq.JooqEdition

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	alias(libs.plugins.liquibase.plugin)
	alias(libs.plugins.jooq.plugin)
	alias(libs.plugins.protobuf.plugin)
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation libs.spring.web

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation libs.testcontainers.core
	testImplementation libs.testcontainers.junit.jupiter
	testImplementation libs.testcontainers.postgresql

	runtimeOnly libs.postgresql.driver

	implementation libs.jooq.codegen
	implementation libs.jooq.start
	jooqGenerator libs.postgresql.driver

	implementation libs.liquibase.core
	liquibaseRuntime libs.liquibase.core
	liquibaseRuntime libs.postgresql.driver

	runtimeOnly libs.grpc
	implementation libs.grpc.protobuf
	implementation libs.grpc.stub
	implementation libs.grpc.server

	compileOnly libs.tomcat.annotations.api

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'

	implementation 'org.springframework.security:spring-security-core:6.2.1'
	implementation 'org.springframework.security:spring-security-web:6.2.1'
	implementation 'org.springframework.security:spring-security-config:6.2.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.2'


}

tasks.named('test') {
	useJUnitPlatform()
}

def db = [
		url: System.getenv('DB_URL') ?: 'jdbc:postgresql://localhost:5432/Shop',
		username: System.getenv('DB_USERNAME') ?: 'postgres',
		password: System.getenv('DB_PASSWORD') ?: '1489qq',
		changelogFilePath: 'src/main/resources/db/changelog/db.changelog-init.yaml'
]

liquibase {
	activities {
		main {
			changelogFile "${db.changelogFilePath}"
			url "${db.url}"
			username "${db.username}"
			password "${db.password}"
		}
	}
	runList = 'main'
}

jooq {
	version = dependencyManagement.importedProperties['jooq.version']
	edition = JooqEdition.OSS

	configurations {
		main {
			generationTool {

				logging = org.jooq.meta.jaxb.Logging.ERROR

				jdbc {
					driver = 'org.postgresql.Driver'
					url = "${db.url}"
					user = "${db.username}"
					password = "${db.password}"
					properties {
						property {
							key = 'PAGE_SIZE'
							value = 2048
						}
					}
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase'
						includes = 'public.*'
						excludes = 'public\\.(Databasechangelog|Databasechangeloglock)'
					}
					target {
						packageName = 'com.example.shop'
					}
					strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
				}
			}
		}
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.22.3"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}